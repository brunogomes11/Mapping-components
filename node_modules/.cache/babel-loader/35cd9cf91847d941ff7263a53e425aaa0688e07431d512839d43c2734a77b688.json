{"ast":null,"code":"var _jsxFileName = \"/Users/brunogomes/Dev2/React/mapping-components-practice/src/components/App.jsx\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport emojipedia from \"../emojipedia\";\n\n//1. Create Entr(Card) Component\n//2. Create props to replace the hardcoded data\n//3a. Import the emojipedia const\n//3. Map through the emokipedia array and render Entry components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createCard(emojiTerm) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    emoji: emojiTerm.emoji,\n    name: emojiTerm.name,\n    meaning: emojiTerm.meaning\n  }, emojiTerm.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"emojipedia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"dl\", {\n      className: \"dictionary\",\n      children: emojipedia.map(createCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Card","emojipedia","jsxDEV","_jsxDEV","createCard","emojiTerm","emoji","name","meaning","id","fileName","_jsxFileName","lineNumber","columnNumber","App","children","className","map","_c","$RefreshReg$"],"sources":["/Users/brunogomes/Dev2/React/mapping-components-practice/src/components/App.jsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport emojipedia from \"../emojipedia\";\n\n//1. Create Entr(Card) Component\n//2. Create props to replace the hardcoded data\n//3a. Import the emojipedia const\n//3. Map through the emokipedia array and render Entry components\n\n\nfunction createCard(emojiTerm) {\n  return (\n    <Card \n      key={emojiTerm.id}\n      emoji={emojiTerm.emoji}\n      name={emojiTerm.name}\n      meaning={emojiTerm.meaning}\n\n    />\n  )\n}\n\nfunction App() {\n  return (\n    <div>\n      <h1>\n        <span>emojipedia</span>\n      </h1>\n      <dl className=\"dictionary\">\n        {emojipedia.map(createCard)}\n      </dl>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,eAAe;;AAEtC;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,UAAUA,CAACC,SAAS,EAAE;EAC7B,oBACEF,OAAA,CAACH,IAAI;IAEHM,KAAK,EAAED,SAAS,CAACC,KAAM;IACvBC,IAAI,EAAEF,SAAS,CAACE,IAAK;IACrBC,OAAO,EAAEH,SAAS,CAACG;EAAQ,GAHtBH,SAAS,CAACI,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKjB;AAEN;AAEA,SAASC,GAAGA,CAAA,EAAG;EACb,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,eACEZ,OAAA;QAAAY,QAAA,EAAM;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB,eACLV,OAAA;MAAIa,SAAS,EAAC,YAAY;MAAAD,QAAA,EACvBd,UAAU,CAACgB,GAAG,CAACb,UAAU;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAACK,EAAA,GAXQJ,GAAG;AAaZ,eAAeA,GAAG;AAAC,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}